{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "scopeName": "source.jsonata",
  "foldingStartMarker": "\\{\\s*$",
  "foldingStopMarker": "^\\s*\\}",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#string"
    },
    {
      "include": "#variable"
    },
    {
      "include": "#names"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "begin": "/\\*\\*(?!/)",
          "captures": {
            "0": {
              "name": "punctuation.definition.comment.json"
            }
          },
          "end": "\\*/",
          "name": "comment.block.documentation.json"
        },
        {
          "begin": "/\\*",
          "captures": {
            "0": {
              "name": "punctuation.definition.comment.json"
            }
          },
          "end": "\\*/",
          "name": "comment.block.json"
        },
        {
          "captures": {
            "1": {
              "name": "punctuation.definition.comment.json"
            }
          },
          "match": "(//).*$\\n?",
          "name": "comment.line.double-slash.js"
        }
      ]
    },
    "string": {
      "begin": "\"",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.json"
        }
      },
      "end": "\"",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.json"
        }
      },
      "name": "string.quoted.double.json",
      "patterns": [
        {
          "include": "#stringcontent"
        }
      ]
    },
    "stringcontent": {
      "patterns": [
        {
          "match": "(?x)                # turn on extended mode\n  \\\\                # a literal backslash\n  (?:               # ...followed by...\n    [\"\\\\/bfnrt]     # one of these characters\n    |               # ...or...\n    u               # a u\n    [0-9a-fA-F]{4}) # and four hex digits",
          "name": "constant.character.escape.json"
        },
        {
          "match": "\\\\.",
          "name": "invalid.illegal.unrecognized-string-escape.json"
        }
      ]
    },
    "variable": {
      "name": "variable.parameter",
      "match": "\\$[a-zA-Z0-9_]*"
    },
    "names": {
      "name": "variable.parameter",
      "match": "[a-zA-Z0-9_]+"
    }
  }
}